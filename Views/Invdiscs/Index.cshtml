@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment WebHostEnvironment

@using DiscBudV1.Areas.Identity.Data
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using DiscBudV1.Controllers
@using DiscBudV1.Models
@using Microsoft.AspNetCore.Mvc


@model List<DiscBudV1.Models.Invdisc>
@inject SignInManager<DiscBudV1User> SignInManager
@{
    ViewData["Title"] = "Index";
}

<div class="container py-5">
    <h1 class="mb-3">Inventory</h1>
    <form id="searchForm" class="mb-3">
        <div class="form-group mr-2 mb-3">
            <input type="text"
                   id="searchInput"
                   class="form-control"
                   placeholder="Search by name, type, or characteristics" />
        </div>
        <div id="filterButtons" class="btn-group" role="group" aria-label="Filter by type">
            <button type="button" class="btn btn-outline-primary filter-btn" data-type="all">All</button>
            <button type="button" class="btn btn-outline-primary filter-btn" data-type="driver">Driver</button>
            <button type="button" class="btn btn-outline-primary filter-btn" data-type="midrange">Midrange</button>
            <button type="button" class="btn btn-outline-primary filter-btn" data-type="putter">Putter</button>
        </div>
    </form>
<p>
    <a asp-action="Create">Create New</a>
</p>
@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Disc)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody> *@

<div class="row" id="discsContainer">
@foreach (var item in Model) {
   <div class="col-md-4 col-sm-6 mb-4 disc-item" data-type="@item.Disc.Type.ToLower()">
       <div class="card disc-card">
           <div class="card-body">
               <h5 class="card-title">
                    @Html.DisplayFor(modelItem => item.Disc.Name)
                    @if (item.Disc.Characteristics.Contains("Stable"))
                    {
                        <span>&#x2191;</span> <!-- Up arrow for stable discs -->
                    }
                    else if (item.Disc.Characteristics.Contains("Overstable") || item.Disc.Characteristics.Contains("Slightly overstable"))
                    {
                        <span>&#x2192;</span> <!-- Right arrow for overstable discs -->
                    }
                    else if (item.Disc.Characteristics.Contains("Understable") || item.Disc.Characteristics.Contains("Slightly understable"))
                    {
                        <span>&#x2190;</span> <!-- Left arrow for understable discs -->
                    }
               </h5>
               <p class="card-text">
                   <!-- Display basic information here -->
                   @Html.DisplayFor(modelItem => item.Disc.Speed) / @Html.DisplayFor(modelItem => item.Disc.Glide) / @Html.DisplayFor(modelItem => item.Disc.Turn) / @Html.DisplayFor(modelItem => item.Disc.Fade)
               </p>
                <!-- Toggle button for details -->
                        <div class="d-flex">
                   <button class="btn btn-info btn-sm toggle-details" data-toggle="collapse" data-target="#details-@item.Disc.Id">Details</button>
                   <form action="@Url.Action("AddDiscToBag", "Bags")" method="post">
                       <input type="hidden" name="invdiscId" value="@item.Id" />
                       <button type="submit" class="btn btn-success btn-sm">Add to Bag</button>
                   </form>
                   <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
               </div>
           </div>
           <div class="card-footer collapse" id="details-@item.Disc.Id">
               <p><strong>Manufacturer:</strong> @Html.DisplayFor(modelItem => item.Disc.Manufacturer)</p>
               <p><strong>Type:</strong> @Html.DisplayFor(modelItem => item.Disc.Type)</p>
               <p><strong>Characteristics:</strong> @Html.DisplayFor(modelItem => item.Disc.Characteristics)</p>
           </div>
       </div>
   </div>
 }
 </div>

    @section scripts {
        <script>
            $(document).ready(function () {
                function filterDiscs() {
                    var searchText = $('#searchInput').val().toLowerCase().trim();
                    var selectedType = $('.filter-btn.active').data('type');

                    $('.disc-item').each(function () {
                        var cardText = $(this).text().toLowerCase();
                        var matchFound = false;

                        // Get characteristics text from the .card-footer and split into individual characteristics
                        var characteristicsText = $(this).find('.card-footer p:contains("Characteristics:")').text().toLowerCase();
                        var characteristicsArray = characteristicsText.replace('characteristics:', '').split(',').map(s => s.trim());

                        // Check for search text match
                        if (searchText) {
                            if (searchText === 'stable') {
                                matchFound = characteristicsArray.includes('stable');
                            } else if (searchText === 'overstable') {
                                matchFound = characteristicsArray.includes('overstable') || characteristicsArray.includes('slightly overstable');
                            } else if (searchText === 'understable') {
                                matchFound = characteristicsArray.includes('understable') || characteristicsArray.includes('slightly understable');
                            } else {
                                matchFound = cardText.includes(searchText);
                            }
                        } else {
                            matchFound = true; // Show all if search text is empty
                        }

                        // Check for type match
                        var discType = $(this).data('type');
                        if (selectedType !== 'all' && selectedType !== discType) {
                            matchFound = false;
                        }

                        $(this).toggle(matchFound);
                    });
                }

                $('#searchInput').on('input', function () {
                    filterDiscs();
                });

                $('.filter-btn').on('click', function () {
                    $('.filter-btn').removeClass('active');
                    $(this).addClass('active');
                    filterDiscs();
                });

                $(".toggle-details").on("click", function () {
                    var target = $(this).data("target");
                    $(target).collapse("toggle");
                });

                // Set initial active filter to 'All'
                $('.filter-btn[data-type="all"]').addClass('active');
            });
        </script>
    }

@*       
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.User.Id)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Disc.Id)
    </td>
        <td>
            @Html.DisplayFor(modelItem => item.Disc.Name)
        </td>
    <td>
        <form action="@Url.Action("AddDiscToBag", "Bags")" method="post">
            <input type="hidden" name="invdiscId" value="@item.Id" />
            <button type="submit" class="btn btn-success btn-sm">Add to inv</button>
        </form>
        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
    </td>
</tr> 
*@